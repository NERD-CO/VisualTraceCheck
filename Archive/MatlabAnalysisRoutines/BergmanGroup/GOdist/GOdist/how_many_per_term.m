function how_many_per_term(ontology);
% Answers the question: how many genes are represented by each term and
% writes it to a file

switch ontology
    case 'cc'
        TOP_TERM = 5575; 
        GO_MTX_fname = 'D:\newchips\GO\GO_cc_child_parent_mtx';   
        GO_annotation_fname = 'D:\newchips\GO\GO_cc_M430A'; 
        terms_fname = 'D:\newchips\GO\GO_cc_terms'; 
        outfile = 'D:\newchips\GO\cc_probes_per_term.xls'; 
    case 'mf'
        TOP_TERM = 3674; 
        GO_MTX_fname = 'D:\newchips\GO\GO_mf_child_parent_mtx';   
        GO_annotation_fname = 'D:\newchips\GO\GO_mf_M430A'; 
        terms_fname = 'D:\newchips\GO\GO_mf_terms';         
        outfile = 'D:\newchips\GO\mf_probes_per_term.xls'; 
    case 'bp'
        TOP_TERM = 8150; 
        GO_MTX_fname = 'D:\newchips\GO\GO_bp_child_parent_mtx';   
        GO_annotation_fname = 'D:\newchips\GO\GO_bp_M430A';         
        terms_fname = 'D:\newchips\GO\GO_bp_terms';         
        outfile = 'D:\newchips\GO\bp_probes_per_term.xls'; 
end

% LOAD DATA FILES
load(GO_MTX_fname)  % This file contains the variables created by [C,P,IP] = make_relative_list_matx_ver(ontology);
load(GO_annotation_fname); % This file contains the variables generated by  [AI,EC] = parse_annotation_file(ontology);
load(terms_fname); % A file of all terms and names


gene_ids = unique(AI(:,1)); % our list of genes contains only those genes which are annotated

fid = fopen(outfile,'w');
% The top row for the file
fprintf(fid,'%s\t%s\t%s\t\n','term no','term name','N probes');        
for j = 1:length(ALL_TERMS)        
    term = ALL_TERMS(j);    
    name = ALL_NAMES{j};
    % Get relevant indices
    relinds = get_term_inds(term,P,AI,gene_ids);    
        % Print results to file
        fprintf(fid,'%2.0f\t%s\t%2.0f \t\n',term,name,length(relinds));        
    end
end
fclose(fid);

return